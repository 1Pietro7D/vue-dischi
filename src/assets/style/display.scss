.d-grid {
  display: grid;
}
.d-flex {
  display: flex;
}
.d-inline-flex {
  display: inline-flex;
  /* Displays an element as an inline-level flex container */
}
.d-inherit {
  display: inherit;
}
.d-initial {
  display: initial;
}
.d-inline {
  display: inline;
}
.d-inline-block {
  display: inline-block;
}
.d-block {
  display: block;
}
.d-none {
  display: none;
}
.d-list-item {
  display: list-item;
}

/* table */

.d-table {
  display: table;
}

.d-table-caption {
  display: table-caption;
}
.d-table-column-group {
  display: table-column-group;
}
.d-table-header-group {
  display: table-header-group;
}
.d-table-footer-group {
  display: table-footer-group;
}
.d-table-row-group {
  display: table-row-group;
}
.d-table-cell {
  display: table-cell;
}
.d-table-column {
  display: table-column;
}
.d-table-row {
  display: table-row;
}
/* /table */

.contents {
  display: contents;
  /* Makes the container disappear, making the child elements children of the element the next level up in the DOM */
}
.run-in {
  display: run-in;
  /* Displays an element as either block or inline, depending on context */
  /* in che senso a seconda del caso? */
}
/* ++DA APPROFONDIRE++ */
.-webkit-inline-flex {
  display: -webkit-inline-flex;
  /* sembra esiste una versione ufficiale e questa.. quali sono le differenze? */
}
